var ram = 1024;
// maximum is 1048576
var upgrade = false;
// var victims = [ "silver-helix", "phantasy", "iron-gym"  ];

var victims = [ "johnson-ortho", "omega-net", "crush-fitness", "silver-helix", "phantasy", "iron-gym" ];

// var victims = [ "netlink", "comptek", "rothman-uni", "johnson-ortho", "omega-net",
//     "crush-fitness", "silver-helix", "phantasy", "iron-gym" ];

// var victims = [ "alpha-ent", "rho-construction", "catalyst", "aevum-police",
//  "summit-uni", "netlink", "millenium-fitness", "comptek", "the-hub", "rothman-uni" ];

// level 786
// var victims = [ "zb-institute", "solaris", "lexo-corp", "alpha-ent",
//	"rho-construction", "syscore", "catalyst", "aevum-police", "summit-uni",
//	"netlink", "comptek", "rothman-uni", "the-hub", "millenium-fitness", "johnson-ortho" ];

// level 1500
//var victims = [
//	"megacorp", "ecorp", "b-and-a", "nwo", "clarkinc", "4sigma", "kuai-gong",
//	"blade", "omnitek", "fulcrumtech", "deltaone", "global-pharm", "zeus-med",
//	"nova-med", "univ-energy", "aerocorp", "unitalife", "stormtech", "zb-institute" ];

var threads = Math.floor(ram/getScriptRam("hack-server.script"));
var cost = Math.ceil(getPurchasedServerCost(ram));
var totalCost = cost * getPurchasedServerLimit();

tprint("Starting " + getPurchasedServerLimit() + " servers with " + ram + " GB of ram.");
tprint("  Victims are: " + victims);
tprint("  Each server will run " + threads + " threads and costs " + Math.ceil(cost/1000000) + " m.");
tprint("  Total cost: " + Math.ceil(totalCost/1000000) + " m.");

for (var i = 0; i<getPurchasedServerLimit(); i++) {
	while (getServerMoneyAvailable("home") < getPurchasedServerCost(ram)) {
		sleep(60000);
	}
	var hostname = "pserv-" + i;
	if (serverExists(hostname)) {
		killall(hostname);
		if (upgrade && (getServerMaxRam(hostname) != ram)) {
			deleteServer(hostname);
			purchaseServer(hostname, ram);
		}
	} else {
		purchaseServer(hostname, ram);
	}
    scp("hack-server.script", hostname);
	exec("hack-server.script", hostname, threads, victims[i%victims.length]);
}